"use strict";(self["webpackChunkgcodeviewer_site"]=self["webpackChunkgcodeviewer_site"]||[]).push([[4238],{24238:function(t,e,r){r.r(e),r.d(e,{_TGATextureLoader:function(){return G}});var n=r(30658);const a=1,i=2,o=3,s=9,h=10,c=11,g=48,l=4,f=0,u=1,d=2,w=3;function b(t){let e=0;const r={id_length:t[e++],colormap_type:t[e++],image_type:t[e++],colormap_index:t[e++]|t[e++]<<8,colormap_length:t[e++]|t[e++]<<8,colormap_size:t[e++],origin:[t[e++]|t[e++]<<8,t[e++]|t[e++]<<8],width:t[e++]|t[e++]<<8,height:t[e++]|t[e++]<<8,pixel_size:t[e++],flags:t[e++]};return r}function _(t,e){if(e.length<19)return void n.Y.Error("Unable to load TGA file - Not enough data to contain header");let r=18;const _=b(e);if(_.id_length+r>e.length)return void n.Y.Error("Unable to load TGA file - Not enough data");r+=_.id_length;let p,y=!1,m=!1,A=!1;switch(_.image_type){case s:y=!0;case a:m=!0;break;case h:y=!0;case i:break;case c:y=!0;case o:A=!0;break}const U=_.pixel_size>>3,k=_.width*_.height*U;let G,I,T,v,x,C,z;if(m&&(G=e.subarray(r,r+=_.colormap_length*(_.colormap_size>>3))),y){let t,n,a;p=new Uint8Array(k);let i=0;const o=new Uint8Array(U);while(r<k&&i<k)if(t=e[r++],n=1+(127&t),128&t){for(a=0;a<U;++a)o[a]=e[r++];for(a=0;a<n;++a)p.set(o,i+a*U);i+=U*n}else{for(n*=U,a=0;a<n;++a)p[i+a]=e[r++];i+=n}}else p=e.subarray(r,r+=m?_.width*_.height:k);switch((_.flags&g)>>l){default:case d:I=0,v=1,z=_.width,T=0,x=1,C=_.height;break;case f:I=0,v=1,z=_.width,T=_.height-1,x=-1,C=-1;break;case w:I=_.width-1,v=-1,z=-1,T=0,x=1,C=_.height;break;case u:I=_.width-1,v=-1,z=-1,T=_.height-1,x=-1,C=-1;break}const E="_getImageData"+(A?"Grey":"")+_.pixel_size+"bits",L=D[E](_,G,p,T,x,C,I,v,z),M=t.getEngine();M._uploadDataToTextureDirectly(t,L)}function p(t,e,r,n,a,i,o,s,h){const c=r,g=e,l=t.width,f=t.height;let u,d,w,b=0;const _=new Uint8Array(l*f*4);for(w=n;w!==i;w+=a)for(d=o;d!==h;d+=s,b++)u=c[b],_[4*(d+l*w)+3]=255,_[4*(d+l*w)+2]=g[3*u+0],_[4*(d+l*w)+1]=g[3*u+1],_[4*(d+l*w)+0]=g[3*u+2];return _}function y(t,e,r,n,a,i,o,s,h){const c=r,g=t.width,l=t.height;let f,u,d,w=0;const b=new Uint8Array(g*l*4);for(d=n;d!==i;d+=a)for(u=o;u!==h;u+=s,w+=2){f=c[w+0]+(c[w+1]<<8);const t=255*((31744&f)>>10)/31|0,e=255*((992&f)>>5)/31|0,r=255*(31&f)/31|0;b[4*(u+g*d)+0]=t,b[4*(u+g*d)+1]=e,b[4*(u+g*d)+2]=r,b[4*(u+g*d)+3]=32768&f?0:255}return b}function m(t,e,r,n,a,i,o,s,h){const c=r,g=t.width,l=t.height;let f,u,d=0;const w=new Uint8Array(g*l*4);for(u=n;u!==i;u+=a)for(f=o;f!==h;f+=s,d+=3)w[4*(f+g*u)+3]=255,w[4*(f+g*u)+2]=c[d+0],w[4*(f+g*u)+1]=c[d+1],w[4*(f+g*u)+0]=c[d+2];return w}function A(t,e,r,n,a,i,o,s,h){const c=r,g=t.width,l=t.height;let f,u,d=0;const w=new Uint8Array(g*l*4);for(u=n;u!==i;u+=a)for(f=o;f!==h;f+=s,d+=4)w[4*(f+g*u)+2]=c[d+0],w[4*(f+g*u)+1]=c[d+1],w[4*(f+g*u)+0]=c[d+2],w[4*(f+g*u)+3]=c[d+3];return w}function U(t,e,r,n,a,i,o,s,h){const c=r,g=t.width,l=t.height;let f,u,d,w=0;const b=new Uint8Array(g*l*4);for(d=n;d!==i;d+=a)for(u=o;u!==h;u+=s,w++)f=c[w],b[4*(u+g*d)+0]=f,b[4*(u+g*d)+1]=f,b[4*(u+g*d)+2]=f,b[4*(u+g*d)+3]=255;return b}function k(t,e,r,n,a,i,o,s,h){const c=r,g=t.width,l=t.height;let f,u,d=0;const w=new Uint8Array(g*l*4);for(u=n;u!==i;u+=a)for(f=o;f!==h;f+=s,d+=2)w[4*(f+g*u)+0]=c[d+0],w[4*(f+g*u)+1]=c[d+0],w[4*(f+g*u)+2]=c[d+0],w[4*(f+g*u)+3]=c[d+1];return w}const D={GetTGAHeader:b,UploadContent:_,_getImageData8bits:p,_getImageData16bits:y,_getImageData24bits:m,_getImageData32bits:A,_getImageDataGrey8bits:U,_getImageDataGrey16bits:k};class G{constructor(){this.supportCascades=!1}loadCubeData(){throw".env not supported in Cube."}loadData(t,e,r){const n=new Uint8Array(t.buffer,t.byteOffset,t.byteLength),a=b(n);r(a.width,a.height,e.generateMipMaps,!1,(()=>{_(e,n)}))}}}}]);
//# sourceMappingURL=4238.92c7da09.js.map